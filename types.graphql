# The following types define the data model of the example service
# based on which the GraphQL API is generated

enum Permission {
  ADMIN
  USER
  ITEMCREATE
  ITEMUPDATE
  ITEMDELETE
  PERMISSIONUPDATE
}

type User @model{
  id: ID! @isUnique
  name: String!
  email: String! @isUnique
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
#  cart: [CartItem!]! @relation(name: "UserCart")
#  item: [Item!]! @relation(name: "UserItem")
#  orderItem: [OrderItem!]! @relation(name: "UserOrderItem")
#  order: Order! @relation(name: "UserOrder")
}

type Item @model{
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String!
  image: String
  largeImage: String
  price: Int!
#  user: User! @relation(name: "UserItem")
#  cartItem: CartItem! @relation(name: "ItemCart")
}

type CartItem @model{
  id: ID! @isUnique
  quantity: Int! @default(value: 1)
#  item: Item @relation(name: "ItemCart")
#  user: User! @relation(name: "UserCart")
}

type OrderItem @model{
  id: ID! @isUnique
  title: String!
  description: String!
  image: String!
  largeImage: String!
  price: Int!
  quantity: Int! @default(value: 1)
#  user: User @relation(name: "UserOrderItem")
#  order: Order! @relation(name: "ItemOrder")
}

type Order @model{
  id: ID! @isUnique
#  items: [OrderItem!]! @relation(name: "ItemOrder")
  total: Int!
#  user: User! @relation(name: "UserOrder")
  charge: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}



